{"version":3,"sources":["context/planetsContext.js","components/Table.js","components/FilterByName.js","components/ButtonFilter.js","components/ColumnFilter.js","components/ComparisonFilter.js","components/ValueFilter.js","components/FilterByNumericValues.js","components/RemoveFilter.js","components/ShowFilters.js","services/filterFunc.js","App.js","index.js"],"names":["PlanetsContext","createContext","Table","Consumer","data","border","map","name","rotationPeriod","rotation_period","orbitalPeriod","orbital_period","diameter","climate","gravity","terrain","surfaceWater","surface_water","population","films","created","edited","url","key","FilterByName","filterByName","planetName","setPlanetName","data-testid","type","value","placeholder","onChange","e","target","ButtonFilter","filters","setFilters","filterByNumericValues","column","comparison","onClick","ColumnFilter","allOptions","label","setColumn","options","length","forEach","fil","filtered","filter","ComparisonFilter","setComparison","ValueFilter","setValue","FilterByNumericValues","RemoveFilter","props","style","backgroundColor","marginLeft","f","ShowFilters","display","replace","filterFunc","allData","dataFiltered","col","Object","values","compar","val","parseInt","apllyFilter","d","res","includes","App","useState","setData","useEffect","fetch","then","response","json","dataApi","results","contextValue","Provider","flexDirection","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.942940b2.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst PlanetsContext = createContext();\nexport default PlanetsContext;\n","import React from 'react';\nimport PlanetsContext from '../context/planetsContext';\n\nfunction Table() {\n  return (\n    <PlanetsContext.Consumer>\n      { ({ data }) => (\n        <table border=\"1\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Rotation Period</th>\n              <th>Orbital Period</th>\n              <th>Diameter</th>\n              <th>Climate</th>\n              <th>Gravity</th>\n              <th>Terrain</th>\n              <th>Surface Water</th>\n              <th>Population</th>\n              <th>Films</th>\n              <th>Created</th>\n              <th>Edited</th>\n              <th>URL</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              data.map(({\n                name,\n                rotation_period: rotationPeriod,\n                orbital_period: orbitalPeriod,\n                diameter,\n                climate,\n                gravity,\n                terrain,\n                surface_water: surfaceWater,\n                population,\n                films,\n                created,\n                edited,\n                url,\n              }) => (\n                <tr key={ name }>\n                  <td>{ name }</td>\n                  <td>{ rotationPeriod }</td>\n                  <td>{ orbitalPeriod }</td>\n                  <td>{ diameter }</td>\n                  <td>{ climate }</td>\n                  <td>{ gravity }</td>\n                  <td>{ terrain }</td>\n                  <td>{ surfaceWater }</td>\n                  <td>{ population }</td>\n                  <td>{ films }</td>\n                  <td>{ created }</td>\n                  <td>{ edited }</td>\n                  <td>{ url }</td>\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n      )}\n    </PlanetsContext.Consumer>\n  );\n}\n\nexport default Table;\n","import React from 'react';\nimport PlanetsContext from '../context/planetsContext';\n\nfunction FilterByName() {\n  return (\n    <PlanetsContext.Consumer>\n      { ({ filterByName: { planetName, setPlanetName } }) => (\n        <input\n          data-testid=\"name-filter\"\n          type=\"text\"\n          value={ planetName }\n          placeholder=\"Filtro por nome\"\n          onChange={ (e) => setPlanetName(e.target.value) }\n        />\n      )}\n    </PlanetsContext.Consumer>\n  );\n}\n\nexport default FilterByName;\n","import React from 'react';\nimport PlanetsContext from '../context/planetsContext';\n\nfunction ButtonFilter() {\n  return (\n    <PlanetsContext.Consumer>\n      { ({\n        filters,\n        setFilters,\n        filterByNumericValues: { column, comparison, value },\n      }) => (\n        <button\n          data-testid=\"button-filter\"\n          type=\"button\"\n          onClick={ () => setFilters([...filters, { column, comparison, value }]) }\n        >\n          Aplicar\n        </button>\n      )}\n    </PlanetsContext.Consumer>\n  );\n}\n\nexport default ButtonFilter;\n","import React from 'react';\nimport PlanetsContext from '../context/planetsContext';\n\nfunction ColumnFilter() {\n  const allOptions = [\n    { value: 'population', label: 'population' },\n    { value: 'orbital_period', label: 'orbital_period' },\n    { value: 'diameter', label: 'diameter' },\n    { value: 'rotation_period', label: 'rotation_period' },\n    { value: 'surface_water', label: 'surface_water' },\n  ];\n\n  return (\n    <PlanetsContext.Consumer>\n      { ({ filters, filterByNumericValues: { column, setColumn } }) => {\n        let options = allOptions;\n        if (filters.length > 0) {\n          filters.forEach((fil) => {\n            const filtered = options.filter(({ value }) => value !== fil.column);\n            options = filtered;\n          });\n        }\n\n        return (\n          <select\n            data-testid=\"column-filter\"\n            value={ column }\n            onChange={ (e) => setColumn(e.target.value) }\n          >\n            { options.map(({ value, label }) => (\n              <option\n                key={ value }\n                value={ value }\n              >\n                { label }\n              </option>)) }\n          </select>\n        );\n      }}\n    </PlanetsContext.Consumer>\n  );\n}\n\nexport default ColumnFilter;\n","import React from 'react';\nimport PlanetsContext from '../context/planetsContext';\n\nfunction ComparisonFilter() {\n  const options = [\n    { value: 'maior que', label: 'maior que' },\n    { value: 'igual a', label: 'igual a' },\n    { value: 'menor que', label: 'menor que' },\n  ];\n\n  return (\n    <PlanetsContext.Consumer>\n      { ({ filterByNumericValues: { comparison, setComparison } }) => (\n        <select\n          data-testid=\"comparison-filter\"\n          value={ comparison }\n          onChange={ (e) => setComparison(e.target.value) }\n        >\n          { options.map(({ value, label }) => (\n            <option\n              key={ value }\n              value={ value }\n            >\n              { label }\n            </option>)) }\n        </select>\n      )}\n    </PlanetsContext.Consumer>\n  );\n}\n\nexport default ComparisonFilter;\n","import React from 'react';\nimport PlanetsContext from '../context/planetsContext';\n\nfunction ValueFilter() {\n  return (\n    <PlanetsContext.Consumer>\n      { ({ filterByNumericValues: { value, setValue } }) => (\n        <input\n          data-testid=\"value-filter\"\n          type=\"number\"\n          placeholder=\"Input number\"\n          value={ value }\n          onChange={ (e) => setValue(e.target.value) }\n        />\n      )}\n    </PlanetsContext.Consumer>\n  );\n}\n\nexport default ValueFilter;\n","import React from 'react';\nimport ButtonFilter from './ButtonFilter';\nimport ColumnFilter from './ColumnFilter';\nimport ComparisonFilter from './ComparisonFilter';\nimport ValueFilter from './ValueFilter';\n\nfunction FilterByNumericValues() {\n  return (\n    <>\n      <ColumnFilter />\n      <ComparisonFilter />\n      <ValueFilter />\n      <ButtonFilter />\n    </>\n  );\n}\n\nexport default FilterByNumericValues;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetsContext from '../context/planetsContext';\n\nfunction RemoveFilter(props) {\n  const { column } = props;\n\n  return (\n    <PlanetsContext.Consumer>\n      {({ filters, setFilters }) => (\n        <button\n          style={ { backgroundColor: 'red', marginLeft: '50px' } }\n          type=\"button\"\n          value={ column }\n          onClick={ (e) => {\n            setFilters(filters.filter((f) => f.column !== e.target.value));\n          } }\n        >\n          X\n        </button>\n      )}\n    </PlanetsContext.Consumer>\n  );\n}\n\nRemoveFilter.propTypes = {\n  column: PropTypes.string.isRequired,\n};\n\nexport default RemoveFilter;\n","import React from 'react';\nimport PlanetsContext from '../context/planetsContext';\nimport RemoveFilter from './RemoveFilter';\n\nfunction ShowFilters() {\n  return (\n    <PlanetsContext.Consumer>\n      {\n        ({ filters }) => (\n          <div>\n            {\n              filters.map(({ column, comparison, value }) => (\n                <div data-testid=\"filter\" key={ column } style={ { display: 'flex' } }>\n                  <div>{`${column} ${comparison.replace(/===/g, '=')} ${value}`}</div>\n                  { ' ' }\n                  <RemoveFilter column={ column } />\n                </div>\n              ))\n            }\n          </div>\n        )\n      }\n    </PlanetsContext.Consumer>\n  );\n}\n\nexport default ShowFilters;\n","export default function filterFunc(allData, filters, planetName) {\n  let dataFiltered = allData;\n  if (filters.length > 0) {\n    filters.forEach((fil) => {\n      const col = Object.values(fil)[0];\n      const compar = Object.values(fil)[1];\n      const val = parseInt(Object.values(fil)[2], 10);\n\n      const apllyFilter = dataFiltered.filter((d) => {\n        let res = [];\n        if (compar === 'maior que') res = parseInt(d[col], 10) > val;\n        if (compar === 'menor que') res = parseInt(d[col], 10) < val;\n        if (compar === 'igual a') res = parseInt(d[col], 10) === val;\n        return res;\n      });\n\n      dataFiltered = apllyFilter;\n    });\n  } else {\n    dataFiltered = allData.filter((d) => d.name.includes(planetName));\n  }\n\n  return dataFiltered;\n}\n","import React, { useEffect, useState } from 'react';\nimport Table from './components/Table';\nimport './App.css';\nimport PlanetsContext from './context/planetsContext';\nimport FilterByName from './components/FilterByName';\nimport FilterByNumericValues from './components/FilterByNumericValues';\nimport ShowFilters from './components/ShowFilters';\nimport filterFunc from './services/filterFunc';\n\nfunction App() {\n  const [data, setData] = useState('');\n  const [planetName, setPlanetName] = useState('');\n  const [column, setColumn] = useState('population');\n  const [comparison, setComparison] = useState('maior que');\n  const [value, setValue] = useState('0');\n  const [filters, setFilters] = useState([]);\n\n  useEffect(() => {\n    fetch('https://swapi-trybe.herokuapp.com/api/planets/')\n      .then((response) => response.json())\n      .then((dataApi) => {\n        setData(dataApi.results);\n      });\n  }, []);\n\n  // function filterFunc(allData, filters) {\n  //   let dataFiltered = allData;\n  //   if (filters.length > 0) {\n  //     filters.forEach((fil) => {\n  //       const col = Object.values(fil)[0];\n  //       const compar = Object.values(fil)[1];\n  //       const val = parseInt(Object.values(fil)[2], 10);\n\n  //       const apllyFilter = dataFiltered.filter((d) => {\n  //         let res = [];\n  //         if (compar === 'maior que') res = parseInt(d[col], 10) > val;\n  //         if (compar === 'menor que') res = parseInt(d[col], 10) < val;\n  //         if (compar === 'igual a') res = parseInt(d[col], 10) === val;\n  //         return res;\n  //       });\n\n  //       dataFiltered = apllyFilter;\n  //     });\n  //   } else {\n  //     dataFiltered = allData.filter((d) => d.name.includes(planetName));\n  //   }\n\n  //   return dataFiltered;\n  // }\n\n  const contextValue = {\n    data: data && filterFunc(data, filters, planetName),\n    setData,\n    filterByName: {\n      planetName,\n      setPlanetName },\n    filterByNumericValues: {\n      column,\n      setColumn,\n      comparison,\n      setComparison,\n      value,\n      setValue },\n    filters,\n    setFilters,\n  };\n\n  return (\n    <PlanetsContext.Provider value={ contextValue }>\n      <div style={ { display: 'flex', flexDirection: 'column' } }>\n        <span>\n          <FilterByName />\n        </span>\n        <span>\n          <FilterByNumericValues />\n        </span>\n        <ShowFilters />\n      </div>\n      { (data) ? <Table /> : <div>Carregando...</div> }\n    </PlanetsContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}